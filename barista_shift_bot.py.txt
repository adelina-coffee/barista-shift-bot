# barista_shift_bot.py

import asyncio
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime
import pytz
import os
from flask import Flask
import threading

TOKEN = os.getenv("TOKEN")
FORUM_TOPIC_IDS = {
    "–æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç": 1,
    "–ù–∞–¥–æ –∑–∞–∫–∞–∑–∞—Ç—å": 2,
}
CHAT_ID = -1000000000000  # –ó–∞–º–µ–Ω–∏ –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π ID —á–∞—Ç–∞

KALININGRAD_TZ = pytz.timezone("Europe/Kaliningrad")

bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()
scheduler = AsyncIOScheduler(timezone=KALININGRAD_TZ)

async def send_reminder(chat_id: int, topic_id: int, message: str):
    await bot.send_message(chat_id=chat_id, message_thread_id=topic_id, text=message)

def schedule_reminders():
    scheduler.add_job(
        send_reminder,
        trigger='cron',
        day_of_week='wed',
        hour=7, minute=30,
        args=[CHAT_ID, FORUM_TOPIC_IDS["–æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç"],
              "@dobro_kld –°–µ–≥–æ–¥–Ω—è –ß–ï–†–ù–ê–Ø –°–†–ï–î–ê ‚òïÔ∏è –£–≥–æ—â–∞–µ–º –Ω–∞—à–∏—Ö –≥–æ—Å—Ç–µ–π –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä –∫–æ—Ñ–µ üòÑ"]
    )
    scheduler.add_job(
        send_reminder,
        trigger='cron',
        day_of_week='wed,sun',
        hour=8, minute=10,
        args=[CHAT_ID, FORUM_TOPIC_IDS["–ù–∞–¥–æ –∑–∞–∫–∞–∑–∞—Ç—å"],
              "‚ÄºÔ∏è –ö–æ—Ç–∏–∫–∏, —Å–µ–≥–æ–¥–Ω—è –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∫ –∑–∞–∫—É–ø—É! üôå –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π! :)"]
    )

@dp.startup()
async def on_startup():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    schedule_reminders()
    scheduler.start()

# –ú–∏–Ω–∏-—Å–µ—Ä–≤–µ—Ä Flask
app = Flask(__name__)

@app.route('/')
def home():
    return 'Bot is running!'

def run_web():
    app.run(host='0.0.0.0', port=8080)

# –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –∑–∞–ø—É—Å–∫–∞
async def main():
    # –∑–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=run_web).start()
    # –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
if __name__ == "__main__":
    # –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞–µ–º Flask, —á—Ç–æ–±—ã Render —É–≤–∏–¥–µ–ª –æ—Ç–∫—Ä—ã—Ç—ã–π –ø–æ—Ä—Ç
    threading.Thread(target=run_web).start()

    # –ù–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥—ë–º, —á—Ç–æ–±—ã Flask —É—Å–ø–µ–ª –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    import time
    time.sleep(3)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    asyncio.run(main())